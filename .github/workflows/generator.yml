name: Generator

on:
  issues:
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - name: Install requirements #安装requests
      run: |
        pip install -r requirements.txt
    - name: Update links #更新
      run: |
        python generator/main.py
    - name: Commit & Push
      uses: action-x/commit@v2.9
      with:
        github-token: ${{ secrets.PAT }}
        push-branch: 'output'
        force-push: 'true'
        commit-message: 'Generate Json'
        name: ${{ secrets.GITHUBUSERNAME }}
        email: ${{ secrets.GITHUBEMAIL }}
    - name: Checkout CDN repository
      run: |
          git clone https://${{ secrets.GITHUBUSERNAME }}:${{ secrets.PAT }}@github.com/${{ secrets.GITHUBUSERNAME }}/CDN.git
          cd CDN
          
          # 确保没有未加入分支的内容
          git fetch origin

          # 如果需要删除完整的 links 目录，请使用 -r 参数
          git rm -r links/  # 删除整个 links 目录（如有必要）
          
          git commit -m "Delete links directory"
          git push origin main

    - name: Push changes to CDN repository
      run: |
          cd ./v2
          
          # 设置默认主分支为 'main'
          git config --global init.defaultBranch main
          
          if [ ! -d ".git" ]; then
            git init
            echo "Initialized new Git repository."
          fi

          # 配置用户信息
          git config --global user.name "${{ secrets.GITHUBUSERNAME }}"
          git config --global user.email "${{ secrets.GITHUBEMAIL }}"
          
          git remote add origin https://${{ secrets.GITHUBUSERNAME }}:${{ secrets.PAT }}@github.com/${{ secrets.GITHUBUSERNAME }}/CDN.git
          
          # 更新本地分支以确保所有更改都已拉取
          git fetch origin
          
          # 合并最新的主分支
          git merge origin/main --allow-unrelated-histories || { echo "Merge conflict detected"; exit 1; }
          
          # 显示当前状态
          git status
          
          # 列出特定目录的内容
          ls -la ./links/
          
          # 添加文件并提交
          git add .
          
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "友链更新" || echo "No changes to commit"
          else
            echo "No changes to commit."
          fi
          
          # 推送到远程
          git push -u origin main || { echo "Push failed, please resolve the issues."; exit 1; }
    # - name: 发送请求至本仓库的另外一工作流
    #   uses: peter-evans/repository-dispatch@v3
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}  # 使用默认的 GITHUB_TOKEN
    #     repository: ${{ github.repository }}  # 指向当前仓库
    #     event-type: linkschange
    #     client-payload: '{"branch": "output"}'
