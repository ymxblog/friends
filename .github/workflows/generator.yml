name: Generator

on:
  issues:
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - name: Install requirements #安装requests
      run: |
        pip install -r requirements.txt
    - name: Update links #更新
      run: |
        python generator/main.py
    - name: Commit & Push
      uses: action-x/commit@v2.9
      with:
        github-token: ${{ secrets.PAT }}
        push-branch: 'output'
        force-push: 'true'
        commit-message: 'Generate Json'
        name: ${{ secrets.GITHUBUSERNAME }}
        email: ${{ secrets.GITHUBEMAIL }}
    - name: 推送至CDN仓库
      # 推送至CDN仓库
      run: |
        cd ./v2
        
        # 设置默认主分支为 'main'
        git config --global init.defaultBranch main
        
        if [ ! -d ".git" ]; then
          git init
          echo "Initialized new Git repository."
        fi
        
        # 配置用户信息
        git config --global user.name "${{ secrets.GITHUBUSERNAME }}"
        git config --global user.email "${{ secrets.GITHUBEMAIL }}"
        
        if [ "$(git branch --show-current)" != "main" ]; then
          git branch -M main
        fi
        
        git remote add origin https://${{ secrets.GITHUBUSERNAME }}:${{ secrets.PAT }}@github.com/${{ secrets.GITHUBUSERNAME }}/CDN.git
        
        git fetch origin
        
        git clean -fd || echo "No untracked files to clean"
        
        git merge origin/main --allow-unrelated-histories || { echo "Merge conflict detected"; exit 1; }
        
        # 显示当前状态
        git status
        
        # 添加文件并尝试提交
        git add links/  # 确保添加特定的文件或目录
        
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "友链更新" || echo "No changes to commit"
        else
          echo "No changes to commit."
        fi
        
        git push -u origin main || { echo "Push failed, please resolve the issues."; exit 1; }




    # - name: 发送请求至本仓库的另外一工作流
    #   uses: peter-evans/repository-dispatch@v3
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}  # 使用默认的 GITHUB_TOKEN
    #     repository: ${{ github.repository }}  # 指向当前仓库
    #     event-type: linkschange
    #     client-payload: '{"branch": "output"}'
